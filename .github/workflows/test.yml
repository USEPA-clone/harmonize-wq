name: test

on:
  push:
    branches:
      [main, tests_builds]
  pull_request:
    branches:
      [main]
  schedule:
    - cron: '11 1 1 * *'
    
jobs:
  test:
    name: python ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        exclude:
          - os: windows-latest
            python-version: "3.7"
          
    steps:
      - uses: actions/checkout@v3
         
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Update pip and install testing pkgs
        run: |
          python -VV
          python -m pip install --upgrade pip
          pip install pytest
      
      # fiona/gdal wheels for windows
      #- if: ${{ (matrix.os == 'windows-latest') && (matrix.python-version == 3.7) }}
      #  run: |
      #    # https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycryptosat
      #    pip install GDAL‑3.4.2‑cp37‑cp37m‑win_amd64.whl
      #    pip install Fiona‑1.8.21‑cp38‑cp38‑win_amd64.whl
      
      - if: ${{ (matrix.os == 'windows-latest') && (matrix.python-version == 3.8) }}
        run: |
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.1.10.1/GDAL-3.6.2-cp38-cp38-win_amd64.whl
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.1.10.1/Fiona-1.8.22-cp38-cp38-win_amd64.whl
      - if: ${{ (matrix.os == 'windows-latest') && (matrix.python-version == 3.9) }}
        run: |
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.7.16/GDAL-3.7.1-cp39-cp39-win_amd64.whl
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.7.16/Fiona-1.9.4.post1-cp39-cp39-win_amd64.whl
      
      - if: ${{ (matrix.os == 'windows-latest') && (matrix.python-version == 3.10) }}
        run: |
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.7.16/GDAL-3.7.1-cp310-cp310-win_amd64.whl
          pip install https://github.com/cgohlke/geospatial-wheels/releases/download/v2023.7.16/Fiona-1.9.4.post1-cp310-cp310-win_amd64.whl    
      
      - name: Install package and dependencies
        run: |
          python -m pip install --no-deps .
          pip install -r requirements.txt
      
      - name: Run pytest
        run: pytest -v harmonize_wq
